
yarn add razzle-plugin-proxy --dev

cat << EOF > razzle.config.js
'use strict';

module.exports = {
  plugins: [ 'proxy' ]
};
EOF

# on dev docker 
sudo docker network create -d bridge --subnet 10.0.0.0/24 --gateway 10.0.0.1 dockernet

export PUBLIC_PATH=https://opencv.hongri.no/
export CLIENT_PUBLIC_PATH=https://opencv.hongri.no/webpack/
export VIRTUAL_HOST=opencv.hongri.no

cat << EOF > default.conf
server {
  listen 80;
  server_name ${VIRTUAL_HOST};
  
  location /webpack/ {
    proxy_pass http://10.0.0.1:3001/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host \$host;
    proxy_cache_bypass \$http_upgrade;
  }     

  
  location /webpack/sockjs-node/ {
    proxy_pass http://10.0.0.1:3001/sockjs-node/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host \$host;
    proxy_cache_bypass \$http_upgrade;
  }     

  location / {
    proxy_pass http://10.0.0.1:3000/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host \$host;
    proxy_cache_bypass \$http_upgrade;
  }     
}
EOF

cat << EOF > docker-compose.yml
version: "3.7"

services:
  nginx:
    image: nginx:alpine
    ports:
     - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - dockernet
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      LETSENCRYPT_HOST: ${VIRTUAL_HOST}

networks:
  dockernet:
    external: true

EOF

# switch to new teminal
sudo -E docker-compose -f docker-compose.yml up

# switch back to original terminal
yarn start

export PUBLIC_PATH=https://opencv.hongri.no/ 
export CLIENT_PUBLIC_PATH=https://opencv.hongri.no/webpack/
export VIRTUAL_HOST=opencv.hongri.no

cat << EOF > docker-compose.socat.yml
version: "3.7"

services:
  socat:
    image: alpine/socat
    command: tcp-listen:1234,fork,reuseaddr tcp-connect:192.168.1.5:80
    ports:
     - "4321:1234"
    environment:
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      LETSENCRYPT_HOST: ${VIRTUAL_HOST}

EOF

sudo docker-compose -f docker-compose.socat.yml up


export CERTS_VOLUME=nginx_certs
export VHOST_D_VOLUME=nginx_vhost_d
export HTML_VOLUME=nginx_html
export LETSENCRYPT_DEFAULT_EMAIL=email@example.com

cat << EOF > docker-compose.proxy.yml
version: "3.7"

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
     - "80:80"
     - "443:443"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost_d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
      

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - certs:/etc/nginx/certs
      - vhost_d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      DEFAULT_EMAIL: ${LETSENCRYPT_DEFAULT_EMAIL}
      
volumes:
  certs:
    external:
      name: ${CERTS_VOLUME}
  vhost_d:
    external:
      name: ${VHOST_D_VOLUME}
  html:
    external:
      name: ${HTML_VOLUME}

EOF

docker volume create ${CERTS_VOLUME}
docker volume create ${VHOST_D_VOLUME}
docker volume create ${HTML_VOLUME}


# on prod docker
sudo docker-compose -f docker-compose.proxy.yml up -d



yarn start